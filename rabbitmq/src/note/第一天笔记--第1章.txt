第一章
1.1 什么是中间件
    消息是应用中传递的数据，可以是文本字符串、JSON，也可以是对象。
    消息队列中间件可以利用消息传递进行平台无关的数据交流，并基于数据通信来进行分布式系统的集成。
    两种传递模式：
        1.P2P（点对点）：基于队列
        2.Pub/Sub（发布/订阅）：基于主题（topic）

1.2 消息中间件的作用
    解耦：但要保证两边要遵守同样的接口约束。
    冗余（存储）：在处理数据发生故障时消息队列可以对消息进行持久化处理，直到消息被完成处理。
    扩展性：基于解耦
    削峰：
    可恢复性：基于冗余
    顺序保证：可支持一定程度上的顺序性
    缓冲：有助于控制和优化数据流经过系统的速度
    异步通信：可以不立即处理，之后需要的时候慢慢处理

1.3 RabbitMq的起源
    采用Erlang语言实现AMQP（Advance Message Queuing Protocol，高级消息队列协议）的消息中间件。
    最初起源于金融系统。
    AMQP是应用层协议的一个开放标准。
    RabbitMQ的特点：
        可靠性：持久化、传输确认、发布确认等
        灵活的路由：自身特性，交换器
        扩展性：
        高可用性：
        多种协议：除了支持AMQP协议，还支持STOMP、MQTT等
        多语言客户端：几乎支持所有常用语言
        管理界面：
        插件机制：

1.4
    1.4.4 生产和消费消息
        15672端口是RabbitMq监控消息端口
        5672是RabbitMq服务端端口